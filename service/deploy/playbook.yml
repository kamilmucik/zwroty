---
- name: Deploy service package
  hosts: webserver
  vars:
    - image_v1: '--filter name=tomcat-mock'
    - image_v2: '--filter ancestor=mysql/mysql-server:8.0.32'
  become: true
  become_user: root
  tasks:
    - name: Delete old WAR package
      file:
        path: /home/ubuntu/docker/docker/tomcat-mock/target/ROOT.war
        state: absent
    - name: Transfer the WAR package
      copy: src=/Users/kamilmuc/ws/test/20230425/zwroty/service/return-parcel-app/target/ROOT.war dest=/home/ubuntu/docker/docker/tomcat-mock/target/ROOT.war mode=0777
    - name: Get images name
      command: docker container ls -a {{ image_v1 }} --format "{{ '{{' }}.Names {{ '}}' }} {{ '{{' }}.Image {{ '}}' }}"
      register: docker_images
    - name: Run container
      become: true
      shell:
        cmd: "docker-compose up --force-recreate --no-deps -d --build tomcat"
        chdir: /home/ubuntu/docker/
#    - name: Copy file into existing container at tomcat-mock
#      shell: docker cp /home/ubuntu/docker/docker/tomcat-mock/target/ROOT.war tomcat-mock:/opt/tomcat/webapps
#    - name: Restart docker image
#      docker_container:
#        name: "{{ item.split(' ')[0]}}"
#        image: "{{ item.split(' ')[1]}}"
#        state: present
#        recreate: true
#        restart: yes
#        devices:
#          - "/home/ubuntu/docker/docker/tomcat-mock/target:/opt/tomcat/webapps:rwm"
##        keep_volumes: true
##        volumes:
##          - /home/ubuntu/docker/docker/tomcat-mock/target/:/opt/tomcat/webapps/:rw
#        ports:
#          - "8080:8080"
#          - "9100:9100"
#        networks:
#          - name: "docker_app_zwrt_backend"
#      loop: "{{ docker_images.stdout_lines}}"

