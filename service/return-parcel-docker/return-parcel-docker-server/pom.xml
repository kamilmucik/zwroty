<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>pl.estrix</groupId>
        <artifactId>return-parcel-docker</artifactId>
        <version>2.3.0-SNAPSHOT</version>
    </parent>

    <artifactId>return-parcel-docker-server</artifactId>
    <packaging>pom</packaging>

    <properties>
        <docker.app.name>return-parcel-server</docker.app.name>
        <docker.namespace>kamilmucik</docker.namespace>
        <docker.base>${docker.namespace}/${docker.app.name}</docker.base>
        <docker.image>${dockerRegistry}/${docker.base}:${docker.tag}</docker.image>
        <app.module>return-parcel-app</app.module>
        <app.version>${project.parent.version}</app.version>
    </properties>

    <dependencies>
<!--        <dependency>-->
<!--            <groupId>com.dictao.pkg</groupId>-->
<!--            <artifactId>dictao-pkg-docker</artifactId>-->
<!--            <version>${pkg.version}</version>-->
<!--            <type>tar.gz</type>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>*</groupId>-->
<!--                    <artifactId>*</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->
        <dependency>
            <groupId>pl.estrix</groupId>
            <artifactId>return-parcel-app</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 1) Set docker.base property by using groupID and replacing . by / -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <!-- Create image version -->
                    <execution>
                        <id>Image version</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>docker.tag</name>
                            <value>${app.version}-${buildNumber}</value>
                            <regex>-SNAPSHOT</regex>
                            <replacement />
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 2) Download and unzip dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>pl.estrix</groupId>
                                    <artifactId>return-parcel-app</artifactId>
                                    <version>${project.version}</version>
                                    <type>war</type>
                                    <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <!-- other configurations here -->
                        </configuration>
                    </execution>
<!--                    <execution>-->
<!--                        <id>unpack-dependencies</id>-->
<!--                        <phase>generate-sources</phase>-->
<!--                        <goals>-->
<!--                            <goal>unpack-dependencies</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>-->
<!--                            <overWriteSnapshots>true</overWriteSnapshots>-->
<!--                            <excludeTransitive>true</excludeTransitive>-->
<!--                        </configuration>-->
<!--                    </execution>-->
                </executions>
            </plugin>
            <!-- 3) Copy resource files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-deployment-files</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <outputDirectory>${project.build.directory}/deploy</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>deploy</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtension>sh</nonFilteredFileExtension>
                                <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                                <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                        </configuration>
                    </execution>
<!--                    <execution>-->
<!--                        <id>copy-pkg-files</id>-->
<!--                        <phase>process-sources</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy-resources</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <encoding>UTF-8</encoding>-->
<!--                            <outputDirectory>${project.build.directory}/pkg-docker</outputDirectory>-->
<!--                            <resources>-->
<!--                                <resource>-->
<!--                                    <directory>target/dependencies/dictao-pkg-docker-${pkg.version}</directory>-->
<!--                                    <filtering>true</filtering>-->
<!--                                </resource>-->
<!--                            </resources>-->
<!--                        </configuration>-->
<!--                    </execution>-->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <shortRevisionLength>7</shortRevisionLength>
                </configuration>
            </plugin>
            <!-- 4) Compile -->
            <!-- NOTHING TO DO -->
        </plugins>
    </build>
    <profiles>
        <!-- Profile active only on non windows systems (linux, mac or unix) to
        fix the file mode (executable, ...) after files are copied by the
        resource plugin -->
<!--        <profile>-->
<!--            <id>fix-permissions</id>-->
<!--            <activation>-->
<!--                <os>-->
<!--                    <family>!Windows</family>-->
<!--                </os>-->
<!--            </activation>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    <plugin>-->
<!--                        <groupId>org.codehaus.mojo</groupId>-->
<!--                        <artifactId>exec-maven-plugin</artifactId>-->
<!--                        <version>1.6.0</version>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>fix-resource-permissions</id>-->
<!--                                <phase>process-test-resources</phase>-->
<!--                                <goals>-->
<!--                                    <goal>exec</goal>-->
<!--                                </goals>-->
<!--                                <configuration>-->
<!--                                    <executable>/bin/sh</executable>-->
<!--                                    <arguments>-->
<!--                                        <argument>-c</argument>-->
<!--                                        <argument>-->
<!--                                            set -x-->
<!--                                            SRC="target/dependencies/dictao-pkg-docker-${pkg.version}"-->
<!--                                            DST="${project.build.directory}/pkg-docker"-->
<!--                                        </argument>-->
<!--                                    </arguments>-->
<!--                                </configuration>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
<!--                </plugins>-->
<!--            </build>-->
<!--        </profile>-->
        <profile>
            <id>dockerBuild</id>
            <build>
                <plugins>
                    <!-- 5) Build docker image -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker</executable>
                                    <commandlineArgs>build --build-arg VERSION=${app.version} --build-arg MODULE=${app.module} -t ${docker.image} .
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                            <!-- 6) Test docker image -->
                            <!-- NOTHING TO DO -->

                            <!-- 7) Push docker image to registry-->
                            <execution>
                                <id>docker-push</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker</executable>
                                    <commandlineArgs>push ${docker.image}</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
