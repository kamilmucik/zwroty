task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
//        classpath 'org.javafxports:jfxmobile-plugin:1.3.8'
        classpath 'org.javafxports:jfxmobile-plugin:1.3.17'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
    maven { url 'https://jitpack.io' }
}

version='2.0.0'
def buildTime() {
    new Date().format('yyyy.MM.dd HH:mm')
}

apply plugin: 'java'
apply plugin: 'org.javafxports.jfxmobile'
apply plugin: 'com.github.johnrengelman.shadow'

ext.CHARM_DOWN_VERSION = "2.0.1"

dependencies {
    compile group: 'com.sun.jersey', name: 'jersey-client', version: '1.8'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
    compile group: 'javax.json', name: 'javax.json-api', version: '1.0'
    compile group: 'org.glassfish', name: 'javax.json', version: '1.0.4'

    compile "com.gluonhq:charm-down-common:$CHARM_DOWN_VERSION"
    desktopRuntime "com.gluonhq:charm-down-desktop:$CHARM_DOWN_VERSION"
    desktopRuntime 'org.xerial:sqlite-jdbc:3.8.11.2'
    androidRuntime "com.gluonhq:charm-down-android:$CHARM_DOWN_VERSION"
    androidRuntime 'org.sqldroid:sqldroid:1.0.3'
    iosCompile "org.robovm:robovm-cocoatouch:1.0.0"
    iosRuntime "com.gluonhq:charm-down-ios:$CHARM_DOWN_VERSION"
}
 
mainClassName = 'pl.estrix.zwrotpaczek.AppMain'
// Add desktop dependencies to the task
shadowJar {
    configurations = [project.configurations.desktopRuntime]
}

repositories {
    jcenter()
}
 
jfxmobile {
    ios {
        forceLinkClasses = [ 'pl.estrix.zwrotpaczek.**.*', 'com.gluonhq.charm.down.**.*', 'SQLite.**.*' ]
    }
    android {
//        applicationPackage = 'pl.estrix.zwrotpaczek'
        androidSdk = "$System.env.ANDROID_HOME"
        compileSdkVersion = '23'
        manifest = 'lib/android/AndroidManifest.xml'
        signingConfig {
//            storeFile file('certyfikat/deployment_cert.der')
            storeFile file('certyfikat/Untitled.jks')
            storePassword '1qazse4'
            keyAlias 'estrix'
            keyPassword '1qazse4'
        }
    }
}

def generatedResources = "$buildDir/resources/android/"

sourceSets {
    main {
        //let's register an output folder on the main SourceSet:
        output.dir(generatedResources, builtBy: 'generateMyResources')
        //it is now a part of the 'main' classpath and will be a part of the jar
    }
}

task generateMyResources {
    doLast {
        def generatedTmp = new File(generatedResources)
        if( !generatedTmp.exists() ) {
            generatedTmp.mkdirs()
        }
        def generated = new File(generatedResources, "filter.properties")

        generated.text = "estrix.application.biuld-time=${buildTime()}\n" +
                "estrix.application.name=${project.name}\n" +
                "estrix.application.curr_version=${project.version}\n" +
                "estrix.application.desc=${project.description}"
    }
}